/***************************************************************************************************
 *                              LCD.h
 *
 * Определения макросов, констант и их значений
 *
 * Created: 08.08.2016
 * Автор: Иванов
 *
***************************************************************************************************/

#ifndef LCD_H_
#define LCD_H_

/***************************************************************************************************
* ОПРЕДЕЛЕНИЯ ХАРАКТЕРИСТИК ЖКИ MT-16SD2
***************************************************************************************************/
#define		LCD_KOL_ROW							2								// Количество строк LCD дисплея
// определения регистров и выводов порта управления контроллером ЖКИ (управление + шина данных)
#define		LCD_PORT							PORTA      						// порт управления 
#define		LCD_DDR_PORT						DDRA      						// регистр направления обмена порта управления
#define		LCD_PIN_PORT						PINA							// регистр состояния входов порта управления
#define		LCD_DATA_MASK						0b00001111						// маска выводов шины данных порта управления (разряды DB7..DB4)	!!!БЫЛО 0b01111000	
#define		LCD_CONTROL_MASK					0b00000111						// маска управляющих выводов порта управления
// определение регистров и вывода порта, включающего минус питания LCD дисплея ( LEDMinus ) 
#define		LIGHT_PORT							PORTC      						// порт управления
#define		LIGHT_DDR_PORT						DDRC      						// регистр направления обмена порта управления
#define		LIGHT_PIN_PORT						PINC							// регистр состояния входов порта управления
#define		LIGHT_LED_MINUS_MASK				0b10000000						// маска выводов шины данных порта управления (разряды DB7..DB4)
// определения номеров битов выводов порта управления контроллером ЖКИ
#define		LEDMinus							7								// минус питания подсветки
#define		A0									7								// адресный сигнал (R/S - выбор между передачей данных "1" и команд управления "0")					!!!БЫЛО 2
#define		RW									7								// выбор режима записи ("0") или чтения ("1")														!!!БЫЛО 1
#define		E									6								// разрешение записи в память контроллера (строб данных): переход с высокого лог. уровня на низкий  !!!БЫЛО 0 
#define		BS									3								// флага занятости контроллера: занят "1", свободен "0"												!!!БЫЛО 6

// определения управления питанием подсветки 
//#define		LCD_POWER_ON						LCD_PORT |= (1 << LEDMinus)							// подача питания подсветки
//#define		LCD_POWER_OFF						LCD_PORT &= (~(1 << LEDMinus))						// снятие питания подсветки
#define		LCD_POWER_ON						PORTC |= (1 << LEDMinus)		// подача питания подсветки
#define		LCD_POWER_OFF						PORTC &= (~(1 << LEDMinus))		// снятие питания подсветки


//**************************************************************************************************
//* ШАБЛОНЫ КОМАНД УПРАВЛЕНИЯ ЖКИ
//**************************************************************************************************
// Коды инициализации 4х битного режима			
//												7  6   5   4   3   2    1   0
// Назначение пинов порта						x DB7 DB6 DB5 DB4  A0  R/W  E
#define		LCD_COD_INI1_4BIT					0b00011000				// LCD DB4,DB5,DB6,DB7 = 1100   
#define		LCD_COD_INI2_4BIT					0b00010000				// LCD DB4,DB5,DB6,DB7 = 0010
#define		LCD_COD_INI3_4BIT					0b00010000				// LCD DB4,DB5,DB6,DB7 = 0010
#define		LCD_COD_INI4_4BIT					0b01000000				// LCD DB4,DB5,DB6,DB7 = 1000

// Команды 4x битного режима
#define		LCD_CMD_FUNCTION_SET				0b00101000				// "Function Set" - установка параметров - разрядность интерфейса 4 бит и 1-ю страницу знакогенератора
#define		LCD_CMD_OFF_OFF_OFF					0b00001000				// "Displey ON/OFF control" - выключаем дисплей, курсор выключен, мигание выключено
#define		LCD_CMD_ON_OFF_OFF					0b00001100				// Индикатор включен, курсор выключен, мигание выключено
#define		LCD_CMD_CLEAR_DISPLAY				0b00000001				// "Clear display"" очищает ЖКИ и помещает курсор в 1-ю позицию
#define		LCD_CMD_ENTRY_MODE_RIGHT			0b00000110				// "Entry mode set" устанавливает режим ввода: сдвиг курсора вправо, запрет сдвига дисплея
#define		LCD_CMD_ADDRESS_LINE1				0b10000000				// устанавливает адрес 1-й строки RAM (адрес 00h)
#define		LCD_CMD_ON_OFF_ON					0b00001101				// индикатор включен, курсор выключен, мигание включено
#define		LCD_CMD_ON_ON_OFF					0b00001110				// индикатор включен, курсор включен,  мигание выключено
#define		LCD_CMD_ON_ON_ON					0b00001111				// индикатор включен, курсор включен,  мигание включено
/*
// значение шины данных: разряды DB7..DB0 
//#define		LCD_CMD_CLEAR_DISPLAY				0b00000001				// очищает ЖКИ и помещает курсор в 1-ю позицию
#define		LCD_CMD_RETURN_HOME 	            0b00000010				// помещает курсор в 1-ю позицию
#define		LCD_CMD1_4_BIT	   					0b01100000				// устанавливает разрядность интерфейса 4 бит
//#define		LCD_CMD_8_BIT	   					0b00110000				// устанавливает разрядность интерфейса 8 бит
//#define		LCD_CMD_FUNCTION_SET   	            0b00101010				// устанавливает разрядность интерфейса 4 бит и 1-ю страницу знакогенератора
//#define		LCD_CMD_ON_OFF_OFF					0b00001100				// индикатор включен, курсор выключен, мигание выключено
#define		LCD_CMD_ON_OFF_ON					0b00001101				// индикатор включен, курсор выключен, мигание включено
#define		LCD_CMD_ON_ON_OFF					0b00001110				// индикатор включен, курсор включен,  мигание выключено
#define		LCD_CMD_ON_ON_ON					0b00001111				// индикатор включен, курсор включен,  мигание включено
//#define		LCD_CMD_ENTRY_MODE_RIGHT            0b00000110				// устанавливает режим ввода: сдвиг курсора вправо, запрет сдвига дисплея
#define		LCD_CMD_ENTRY_MODE_LEFT             0b00000100				// устанавливает режим ввода: сдвиг курсора влево, запрет сдвига дисплея
#define		LCD_CMD_ADDRESS_LINE1				0b10000000				// устанавливает адрес 1-й строки RAM (адрес 00h)
#define		LCD_CMD_ADDRESS_LINE2				0b11000000				// устанавливает адрес 2-й строку RAM (адрес 40h)
#define		LCD_CMD_CURSOR_SHIFT_RIGHT          0b00010100				// выполняет сдвиг курсора вправо 
#define		LCD_CMD_CURSOR_SHIFT_LEFT           0b00010000				// выполняет сдвиг курсора влево 
*/
/*
#define		LCD_CMD_SET_CGRAM_ADDRESS           0b01000000											// устанавливает адрес и курсор, выбирает область CGRAM (Character Generator RAM)
*/

//**************************************************************************************************
//* ВРЕМЕНА ЗАДЕРЖКИ
//**************************************************************************************************
#define		TIME_DELAY_INI_LCD					45						// Время задержки при инициализаци 4ч битного режима LCD, мкс
#define		TIME_POWER_ON						25						// время задержки после подачи питания, мс
#define		TIME_DATA_STROBE					2						// время строба данных (E), мкс
#define		TIME_CMD_ALL						50						// время задержки выполнения команд управления (кроме см. ниже), мкс
#define		TIME_CMD_CLEAR_DISPLAY				2						// время задержки выполнения команды "Clear Display", мс
#define		TIME_ENTRY_WAIT						10000					// время ожидания нажатия оператором кнопки "Контроль", мс 

/***************************************************************************************************
* МАКРОСЫ
***************************************************************************************************/
#define		LCDSendCMD(Byte)					LCDSendByte((Byte), (FALSE))	// макрофункция: посылка команды управления
#define		LCDSendData(Byte)					LCDSendByte((Byte), (TRUE))		// макрофункция: посылка байта данных

#define		LCDSendCMD2(Byte)					LCDSendByte2((Byte), (FALSE))	// макрофункция: посылка команды управления
#define		LCDSendData2(Byte)					LCDSendByte2((Byte), (TRUE))		// макрофункция: посылка байта данных

#define		LINE1	0x0
#define		LINE2	0x40
#define		LINE3	0x10
#define		LINE4	0x50
#endif /* LCD_H_ */